"use strict";(self.webpackChunkscrypt_ts_docs=self.webpackChunkscrypt_ts_docs||[]).push([[840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>N});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),m=o(n),N=i,u=m["".concat(p,".").concat(N)]||m[N]||k[N]||r;return n?a.createElement(u,l(l({ref:t},s),{},{components:n})):a.createElement(u,l({ref:t},s))}));function N(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:i,l[1]=d;for(var o=2;o<r;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var a=n(7462),i=(n(7294),n(3905));const r={},l=void 0,d={unversionedId:"modules",id:"modules",title:"modules",description:"scrypt-ts / Exports",source:"@site/docs/modules.md",sourceDirName:".",slug:"/modules",permalink:"/scrypt-ts-docs/docs/modules",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/modules.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VarIntWriter",permalink:"/scrypt-ts-docs/docs/classes/VarIntWriter"}},p={},o=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"SmartContract Classes",id:"smartcontract-classes",level:3},{value:"Standard Contracts Classes",id:"standard-contracts-classes",level:3},{value:"Types Classes",id:"types-classes",level:3},{value:"Array Type Aliases",id:"array-type-aliases",level:3},{value:"Other Type Aliases",id:"other-type-aliases",level:3},{value:"Types Type Aliases",id:"types-type-aliases",level:3},{value:"Bytes Operations Functions",id:"bytes-operations-functions",level:3},{value:"Hashing Functions",id:"hashing-functions",level:3},{value:"Math Functions",id:"math-functions",level:3},{value:"Other Functions",id:"other-functions",level:3},{value:"Signature Verification Functions",id:"signature-verification-functions",level:3},{value:"assert Functions",id:"assert-functions",level:3},{value:"decorator Functions",id:"decorator-functions",level:3},{value:"exit() Functions",id:"exit-functions",level:3},{value:"loop Functions",id:"loop-functions",level:3},{value:"Array Type Aliases",id:"array-type-aliases-1",level:2},{value:"FixedArray",id:"fixedarray",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Other Type Aliases",id:"other-type-aliases-1",level:2},{value:"TxOutputRef",id:"txoutputref",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Types Type Aliases",id:"types-type-aliases-1",level:2},{value:"auto",id:"auto",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Bytes Operations Functions",id:"bytes-operations-functions-1",level:2},{value:"len",id:"len",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"num2bin",id:"num2bin",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"pack",id:"pack",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"reverseBytes",id:"reversebytes",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"unpack",id:"unpack",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"Hashing Functions",id:"hashing-functions-1",level:2},{value:"hash160",id:"hash160",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"hash256",id:"hash256",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"ripemd160",id:"ripemd160",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"sha1",id:"sha1",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"sha256",id:"sha256",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"Math Functions",id:"math-functions-1",level:2},{value:"abs",id:"abs",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"max",id:"max",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"min",id:"min",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"within",id:"within",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"Other Functions",id:"other-functions-1",level:2},{value:"b",id:"b",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"Signature Verification Functions",id:"signature-verification-functions-1",level:2},{value:"checkMultiSig",id:"checkmultisig",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"checkSig",id:"checksig",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"assert Functions",id:"assert-functions-1",level:2},{value:"assert",id:"assert",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"decorator Functions",id:"decorator-functions-1",level:2},{value:"method",id:"method",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"prop",id:"prop",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Parameters",id:"parameters-20",level:5},{value:"Returns",id:"returns-20",level:5},{value:"Defined in",id:"defined-in-22",level:4},{value:"exit() Functions",id:"exit-functions-1",level:2},{value:"exit",id:"exit",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"loop Functions",id:"loop-functions-1",level:2},{value:"loop",id:"loop",level:3},{value:"Induction variable",id:"induction-variable",level:2},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Parameters",id:"parameters-23",level:5},{value:"Returns",id:"returns-23",level:5},{value:"Defined in",id:"defined-in-24",level:4}],s={toc:o};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/scrypt-ts-docs/docs/"},"scrypt-ts")," / Exports"),(0,i.kt)("h1",{id:"scrypt-ts"},"scrypt-ts"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"smartcontract-classes"},"SmartContract Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/SmartContract"},"SmartContract"))),(0,i.kt)("h3",{id:"standard-contracts-classes"},"Standard Contracts Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Constants"},"Constants")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/OpCode"},"OpCode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/SigHash"},"SigHash")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Tx"},"Tx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Utils"},"Utils")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/VarIntReader"},"VarIntReader")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/VarIntWriter"},"VarIntWriter"))),(0,i.kt)("h3",{id:"types-classes"},"Types Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/OpCodeType"},"OpCodeType")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/PrivKey"},"PrivKey")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/PubKey"},"PubKey")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/PubKeyHash"},"PubKeyHash")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Ripemd160"},"Ripemd160")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Sha1"},"Sha1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Sha256"},"Sha256")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/Sig"},"Sig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/SigHashPreimage"},"SigHashPreimage")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/classes/SigHashType"},"SigHashType"))),(0,i.kt)("h3",{id:"array-type-aliases"},"Array Type Aliases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#fixedarray"},"FixedArray"))),(0,i.kt)("h3",{id:"other-type-aliases"},"Other Type Aliases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#txoutputref"},"TxOutputRef"))),(0,i.kt)("h3",{id:"types-type-aliases"},"Types Type Aliases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#auto"},"auto"))),(0,i.kt)("h3",{id:"bytes-operations-functions"},"Bytes Operations Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#len"},"len")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#num2bin"},"num2bin")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#pack"},"pack")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#reversebytes"},"reverseBytes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#unpack"},"unpack"))),(0,i.kt)("h3",{id:"hashing-functions"},"Hashing Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#hash160"},"hash160")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#hash256"},"hash256")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#ripemd160"},"ripemd160")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#sha1"},"sha1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#sha256"},"sha256"))),(0,i.kt)("h3",{id:"math-functions"},"Math Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#abs"},"abs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#max"},"max")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#min"},"min")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#within"},"within"))),(0,i.kt)("h3",{id:"other-functions"},"Other Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#b"},"b"))),(0,i.kt)("h3",{id:"signature-verification-functions"},"Signature Verification Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#checkmultisig"},"checkMultiSig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#checksig"},"checkSig"))),(0,i.kt)("h3",{id:"assert-functions"},"assert Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#assert"},"assert"))),(0,i.kt)("h3",{id:"decorator-functions"},"decorator Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#method"},"method")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#prop"},"prop"))),(0,i.kt)("h3",{id:"exit-functions"},"exit() Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#exit"},"exit"))),(0,i.kt)("h3",{id:"loop-functions"},"loop Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/scrypt-ts-docs/docs/modules#loop"},"loop"))),(0,i.kt)("h2",{id:"array-type-aliases-1"},"Array Type Aliases"),(0,i.kt)("h3",{id:"fixedarray"},"FixedArray"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"FixedArray"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"N"),">",": ",(0,i.kt)("inlineCode",{parentName:"p"},"GrowToSize"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", [], ",(0,i.kt)("inlineCode",{parentName:"p"},"N"),">"),(0,i.kt)("p",null,"An array is a fixed-size list of values of the same basic type.\nWhen you declare an array you have to declare it like this:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"let aaa: FixedArray<bigint, 3> = [1n, 3n, 3n];\n\nlet abb: FixedArray<FixedArray<bigint, 2>, 3> = [[1n, 3n], [1n, 3n], [1n, 3n]];\n\nlet bbb: FixedArray<FixedArray<FixedArray<bigint, 1>, 2>, 3> = [[[1n], [1n]], [[1n], [1n]], [[1n], [1n]]];\n")),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"N")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/types.ts#L69"},"src/builtins/types.ts:69")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"other-type-aliases-1"},"Other Type Aliases"),(0,i.kt)("h3",{id:"txoutputref"},"TxOutputRef"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"TxOutputRef"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"The transaction output point bound by the smart contract"),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"outputIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bsv.Transaction"))))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/contract.ts#L23"},"src/contract.ts:23")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"types-type-aliases-1"},"Types Type Aliases"),(0,i.kt)("h3",{id:"auto"},"auto"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"auto"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("p",null,"The auto keyword specifies that the type of the variable, of basic type, declared will be automatically deducted from its initializer."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/types.ts#L44"},"src/builtins/types.ts:44")),(0,i.kt)("h2",{id:"bytes-operations-functions-1"},"Bytes Operations Functions"),(0,i.kt)("h3",{id:"len"},"len"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"len"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Returns the length of the string bytes. Not the length of the string."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a string")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The length of the string bytes."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L43"},"src/builtins/functions.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"num2bin"},"num2bin"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"num2bin"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"num"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"size"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Converts a number num into a string array of certain size size, including the sign bit. It fails if the number cannot be accommodated."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"num")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a number being converts")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"size")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the size of the result string array")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A string ."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L33"},"src/builtins/functions.ts:33")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pack"},"pack"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"pack"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"n"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"bigint can be converted to string with pack"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"n")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L12"},"src/builtins/functions.ts:12")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reversebytes"},"reverseBytes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reverseBytes"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"b"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"size"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Returns reversed bytes of b, which is of size bytes. Note size must be a compile time constant. It is often useful when converting a number between little-endian and big-endian."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"b")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a string to be reversed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"size")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the size of the string bytes.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The length of the string bytes."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L53"},"src/builtins/functions.ts:53")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unpack"},"unpack"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"unpack"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"string can be converted to bigint using function unpack."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L21"},"src/builtins/functions.ts:21")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"hashing-functions-1"},"Hashing Functions"),(0,i.kt)("h3",{id:"hash160"},"hash160"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hash160"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A RIPEMD160 hash of a SHA256 hash, which is always 160 bits or 20 bytes long.\nThis value is commonly used inside Bitcoin, particularly for Bitcoin\naddresses."),(0,i.kt)("p",null,"See:\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/RIPEMD"},"https://en.wikipedia.org/wiki/RIPEMD")),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The hash in the form of a string."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L177"},"src/builtins/functions.ts:177")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hash256"},"hash256"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hash256"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A double SHA256 hash, which is always 256 bits or 32 bytes bytes long. This\nhash function is commonly used inside Bitcoin, particularly for the hash of a\nblock and the hash of a transaction."),(0,i.kt)("p",null,"See:\n",(0,i.kt)("a",{parentName:"p",href:"https://www.movable-type.co.uk/scripts/sha256.html"},"https://www.movable-type.co.uk/scripts/sha256.html")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The hash in the form of a string."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L192"},"src/builtins/functions.ts:192")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ripemd160"},"ripemd160"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"ripemd160"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A RIPEMD160 hash, which is always 160 bits or 20 bytes long.\nSee:\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/RIPEMD"},"https://en.wikipedia.org/wiki/RIPEMD")),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The hash in the form of a string."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L135"},"src/builtins/functions.ts:135")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sha1"},"sha1"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"sha1"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A SHA or SHA1 hash, which is always 160 bits or 20 bytes long."),(0,i.kt)("p",null,"See:\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SHA-1"},"https://en.wikipedia.org/wiki/SHA-1")),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The hash in the form of a string."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L148"},"src/builtins/functions.ts:148")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sha256"},"sha256"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"sha256"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A SHA256 hash, which is always 256 bits or 32 bytes long."),(0,i.kt)("p",null,"See:\n",(0,i.kt)("a",{parentName:"p",href:"https://www.movable-type.co.uk/scripts/sha256.html"},"https://www.movable-type.co.uk/scripts/sha256.html")),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The hash in the form of a string."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L162"},"src/builtins/functions.ts:162")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"math-functions-1"},"Math Functions"),(0,i.kt)("h3",{id:"abs"},"abs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"abs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"The input ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," is made positive."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L96"},"src/builtins/functions.ts:96")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"max"},"max"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"max"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Returns the larger of ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"b")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L115"},"src/builtins/functions.ts:115")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"min"},"min"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"min"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Returns the smaller of ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"a")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"b")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L107"},"src/builtins/functions.ts:107")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"within"},"within"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"within"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"max"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Returns true if ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," is within the specified range (left-inclusive), false otherwise."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"x")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"min")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"max")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L123"},"src/builtins/functions.ts:123")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"other-functions-1"},"Other Functions"),(0,i.kt)("h3",{id:"b"},"b"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"b"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"IsHexBytes"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"hexStr"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Represents a hex literal string."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IsHexBytes")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MatchesPattern"),"<",(0,i.kt)("inlineCode",{parentName:"td"},'"10"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"11"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"12"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"13"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"14"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"15"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"16"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"17"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"18"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"19"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"20"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"21"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ec"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ca"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"be"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"00"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"01"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"02"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"03"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"04"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"05"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"06"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"07"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"08"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"09"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"0F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"1F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"22"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"23"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"24"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"25"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"26"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"27"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"28"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"29"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"2F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"30"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"31"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"32"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"33"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"34"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"35"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"36"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"37"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"38"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"39"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"3F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"40"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"41"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"42"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"43"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"44"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"45"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"46"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"47"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"48"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"49"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"4F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"50"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"51"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"52"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"53"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"54"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"55"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"56"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"57"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"58"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"59"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"5F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"60"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"61"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"62"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"63"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"64"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"65"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"66"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"67"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"68"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"69"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"6F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"70"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"71"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"72"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"73"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"74"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"75"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"76"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"77"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"78"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"79"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"7F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"80"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"81"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"82"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"83"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"84"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"85"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"86"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"87"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"88"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"89"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"8F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"90"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"91"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"92"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"93"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"94"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"95"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"96"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"97"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"98"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"99"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9d"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9e"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9A"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9a"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9b"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9c"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9f"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9B"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9C"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9D"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9E"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"9F"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"d9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"de"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"da"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"db"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"df"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"e9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ed"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ee"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ea"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ef"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"eF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"A9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ad"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ae"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Aa"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ab"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ac"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Af"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"AF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"a9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ad"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ae"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aa"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ab"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ac"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"af"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"aF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"b9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ba"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bf"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"bF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"c9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ce"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cf"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"cF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"f9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fe"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fa"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ff"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"fF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"B9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Bd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Be"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ba"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Bb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Bc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Bf"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"BF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"C9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Cd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ce"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ca"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Cb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Cc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Cf"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"CF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"D9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Dd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"De"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Da"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Db"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Dc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Df"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"DF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"E9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ed"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ee"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"EA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ea"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Eb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ec"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ef"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"EB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"EC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ED"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"EE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"EF"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F0"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F1"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F2"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F3"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F4"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F5"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F6"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F7"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F8"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"F9"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Fd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Fe"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FA"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Fa"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Fb"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Fc"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"Ff"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FB"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FC"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FD"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"FF"'),", ",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">")))),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"hexStr")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"should be in format of hex bytes, i.e. ",(0,i.kt)("inlineCode",{parentName:"td"},"/^([0-9a-fA-F]{2})*$/"))))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/types.ts#L35"},"src/builtins/types.ts:35")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"signature-verification-functions-1"},"Signature Verification Functions"),(0,i.kt)("h3",{id:"checkmultisig"},"checkMultiSig"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"checkMultiSig"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"signatures"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"publickeys"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Compares the first signature against each public key until it finds an ECDSA match. Starting with the subsequent public key, it compares the second signature against each remaining public key until it finds an ECDSA match. The process is repeated until all signatures have been checked or not enough public keys remain to produce a successful result. All signatures need to match a public key. Because public keys are not checked again if they fail any signature comparison, signatures must be placed in the scriptSig using the same order as their corresponding public keys were placed in the scriptPubKey or redeemScript. If all signatures are valid, 1 is returned, 0 otherwise. Due to a bug, one extra unused value is removed from the stack."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://wiki.bitcoinsv.io/index.php/Opcodes_used_in_Bitcoin_Script"},"https://wiki.bitcoinsv.io/index.php/Opcodes_used_in_Bitcoin_Script")),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"signatures")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/scrypt-ts-docs/docs/classes/Sig"},(0,i.kt)("inlineCode",{parentName:"a"},"Sig")),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"publickeys")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/scrypt-ts-docs/docs/classes/PubKey"},(0,i.kt)("inlineCode",{parentName:"a"},"PubKey")),"[]")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L78"},"src/builtins/functions.ts:78")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checksig"},"checkSig"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"checkSig"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"signature"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"publickey"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"verifies an ECDSA signature. It takes two inputs from the stack, a public key (on top of the stack) and an ECDSA signature in its DER_CANONISED format concatenated with sighash flags. It outputs true or false on the stack based on whether the signature check passes or fails."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://wiki.bitcoinsv.io/index.php/Opcodes_used_in_Bitcoin_Script"},"https://wiki.bitcoinsv.io/index.php/Opcodes_used_in_Bitcoin_Script")),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"signature")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/scrypt-ts-docs/docs/classes/Sig"},(0,i.kt)("inlineCode",{parentName:"a"},"Sig")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"publickey")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/scrypt-ts-docs/docs/classes/PubKey"},(0,i.kt)("inlineCode",{parentName:"a"},"PubKey")))))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L71"},"src/builtins/functions.ts:71")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"assert-functions-1"},"assert Functions"),(0,i.kt)("h3",{id:"assert"},"assert"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"assert"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"cond"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cond")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L204"},"src/builtins/functions.ts:204")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"decorator-functions-1"},"decorator Functions"),(0,i.kt)("h3",{id:"method"},"method"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"method"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"target"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"methodName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"descriptor"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"PropertyDescriptor")),(0,i.kt)("p",null,"Indicates whether the method is a contract method, and ordinary methods do not affect the execution of the contract"),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"target")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"methodName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"descriptor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"PropertyDescriptor"))))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PropertyDescriptor")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/decorators.ts#L7"},"src/decorators.ts:7")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prop"},"prop"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"prop"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"state?"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"target"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"propertyName"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Indicates whether the property is an property of a contract, and ordinary class properties cannot be accessed in contract methods"),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"state")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the property is a property of a stateful contract")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"target"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"propertyName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h5",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"target")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"propertyName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h5",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/decorators.ts#L50"},"src/decorators.ts:50")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"exit-functions-1"},"exit() Functions"),(0,i.kt)("h3",{id:"exit"},"exit"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"exit"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"status"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"exit(bool status)"),"; statement terminates contract execution."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"status")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If status is true, contract succeeds; otherwise, it fails.")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L89"},"src/builtins/functions.ts:89")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"loop-functions-1"},"loop Functions"),(0,i.kt)("h3",{id:"loop"},"loop"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"loop"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"maxLoopCount"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"fn"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"i"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Bitcoin script does not provide looping constructs natively for security reasons. sCrypt achieves looping by repeating the loop body maxLoopCount times. For example, the loop"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"loop (5n) (() => {\n  x = x * 2;\n})\n")),(0,i.kt)("p",null,"is equivalently unrolled to"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"x = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\nx = x * 2;\n")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"maxLoopCount")," is set too small, the contract may not work correctly. If ",(0,i.kt)("inlineCode",{parentName:"p"},"maxLoopCount")," is set too large, the resulting script is bloated unnecessarily and costs more to execute. There are a number of ways to choose the right ",(0,i.kt)("inlineCode",{parentName:"p"},"maxLoopCount")," judiciously. One way is to simulate the contract off chain and find the number of loops. Another way is to exploit the characteristics of the looping itself. For example, if a loop iterates over each bit of a sha256 hash, ",(0,i.kt)("inlineCode",{parentName:"p"},"maxLoopCount")," is 256."),(0,i.kt)("h2",{id:"induction-variable"},"Induction variable"),(0,i.kt)("p",null,"Induction variable can be defined when loop index is needed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"loop (5n) ((i: number) => {\n    // i is the outer loop index\n    loop (5n) ((k: number) => {\n    // j is the inner loop index\n        a += BigInt(i + k);\n    })\n})\n")),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxLoopCount")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"fn"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h5",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fn")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"i"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h5",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sCrypt-Inc/ts-sCrypt/blob/02966bf/src/builtins/functions.ts#L250"},"src/builtins/functions.ts:250")))}k.isMDXComponent=!0}}]);